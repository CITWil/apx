flags:
  apt: "Install packages from the Ubuntu repository."
  aur: "Install packages from the AUR (Arch User Repository)."
  dnf: "Install packages from the Fedora's DNF (Dandified YUM) repository."
  apk: "Install packages from the Alpine repository."
  zypper: "Install packages from the OpenSUSE repository."
  xbps: "Install packages from the Void (Linux) repository."
  name: "Apply to custom container with this name."
apx:
  use: "apx"
  long: "Apx is a package manager with support for multiple sources\nallowing you to install packages in a managed container."
  short: "Apx is a package manager with support for multiple sources\nallowing you to install packages in a managed container."
  verboseFlag: "show more detailed output"
autoremove:
  use: "autoremove"
  long: "Remove all unused packages automatically"
  short: "Remove all unused packages automatically"
  allFlag: "Apply for all containers."
clean:
  use: "clean"
  long: "Clean the apx package manager cache"
  short: "Clean the apx package manager cache"
  allFlag: "Apply for all containers."
enter:
  use: "enter"
  long: "Enter a shell in the container"
  short: "Enter a shell in the container"
export:
  use: "export <program/binary>"
  long: "Export/Recreate a program's desktop entry from a managed container"
  short: "Export/Recreate a program's desktop entry from a managed container"
  binFlag: "Export binary command"
init:
  use: "init"
  long: "Initialize a managed container"
  short: "Initialize a managed container"
  confirm: "Container already exists. Do you want to re-initialize it? This operation will remove everything, including your files in the container."
nix:
  use: "nix"
  long: "Manage a custom installation of nix in your $HOME directory.\n\nThe `apx nix` integration serves as a wrapper for the\ndefault nix profile. You are free to use any features of\nnix without using the `apx nix` command."
  short: "Manage nix installation"
nixinit:
  use: "init"
  long: "Initializes a custom installation of nix by creating $HOME/.nix and setting up some SystemD units to mount it as /nix."
  short: "Initialize nix repository"
  confirm: "This will create a '.nix' folder in your home directory and set up some SystemD units to mount that folder at /nix before running the installation. Confirm 'y' to continue."
  success: "Installation complete. Reboot to start using nix."
nixremove:
  use: "remove"
  long: "Remove the first matching package installed in the default nix profile.\n\nNote: It is possible to have multiple installations of the same package.\n\nIf you need more precision use 'nix profile list' and 'nix profile remove'."
  short: "Remove a nix package"
nixinstall:
  use: "install <pkg>"
  long: "Install a package from the `nixpkgs` repository as a flake in the default nix profile."
  short: "Install nix package"
